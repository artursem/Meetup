{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/artur/Documents/webdev/05_udemy/react/3-basics/23-nextjs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/home/artur/Documents/webdev/05_udemy/react/3-basics/23-nextjs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Fragment","Head","MeetupDetail","MeetupDetails","props","meetupData","title","description","image","address"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC7B,sBACC,QAAC,QAAD;AAAA,4BACC,QAAC,IAAD;AAAA,8BACC;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAKC,QAAC,YAAD;AACC,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KADzB;AAEC,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAFzB;AAGC,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI,OAH3B;AAIC,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJ/B;AAAA;AAAA;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAcA;;KAfQJ,a;;AAoET,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb';\nimport { Fragment } from 'react';\nimport Head from 'next/head';\n\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Head>\n\t\t\t\t<title>{props.meetupData.title}</title>\n\t\t\t\t<meta name='description' content={props.meetupData.description} />\n\t\t\t</Head>\n\t\t\t<MeetupDetail\n\t\t\t\timage={props.meetupData.image}\n\t\t\t\ttitle={props.meetupData.title}\n\t\t\t\taddress={props.meetupData.address}\n\t\t\t\tdescription={props.meetupData.description}\n\t\t\t/>\n\t\t</Fragment>\n\t);\n}\n\nexport async function getStaticPaths() {\n\tconst client = await MongoClient.connect(\n\t\t'mongodb+srv://artursem:to0A1je75MsJ9SZu@cluster0.qa4m5.mongodb.net/meetups?retryWrites=true&w=majority'\n\t);\n\tconst db = client.db();\n\n\tconst meetupsCollection = db.collection('meetups');\n\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n\tclient.close();\n\n\treturn {\n\t\tfallback: 'blocking',\n\t\tpaths: meetups.map((meetup) => ({\n\t\t\tparams: { meetupId: meetup._id.toString() },\n\t\t})),\n\t};\n}\n\nexport async function getStaticProps(context) {\n\t// fetch data for a single meetup\n\n\tconst meetupId = context.params.meetupId;\n\n\tconst client = await MongoClient.connect(\n\t\t'mongodb+srv://artursem:to0A1je75MsJ9SZu@cluster0.qa4m5.mongodb.net/meetups?retryWrites=true&w=majority'\n\t);\n\tconst db = client.db();\n\n\tconst meetupsCollection = db.collection('meetups');\n\n\tconst selectedMeetup = await meetupsCollection.findOne({\n\t\t_id: ObjectId(meetupId),\n\t});\n\n\tclient.close();\n\n\treturn {\n\t\tprops: {\n\t\t\tmeetupData: {\n\t\t\t\tid: selectedMeetup._id.toString(),\n\t\t\t\ttitle: selectedMeetup.title,\n\t\t\t\taddress: selectedMeetup.address,\n\t\t\t\timage: selectedMeetup.image,\n\t\t\t\tdescription: selectedMeetup.description,\n\t\t\t},\n\t\t},\n\t};\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}