{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { MongoClient } from 'mongodb';\nimport Head from 'next/head';\nimport { Fragment } from 'react/cjs/react.production.min';\nimport MeetupList from '../components/meetups/MeetupList';\nconst DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: 'A First Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/4e/Ratusz_wroclaw.JPG/1280px-Ratusz_wroclaw.JPG',\n  address: 'Rynek 14, 50-505 Wrocław',\n  descrption: 'This is a first meetup'\n}, {\n  id: 'm2',\n  title: 'A Second Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/5/5f/Stare_Miasto_w_Poznaniu.jpg',\n  address: 'Rynek 14, 50-505 Poznań',\n  descrption: 'This is a second meetup'\n}, {\n  id: 'm3',\n  title: 'A Third Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d0/Krak%C3%B3w%2C_Sukiennice_%2820190218%29.jpg/800px-Krak%C3%B3w%2C_Sukiennice_%2820190218%29.jpg',\n  address: 'Rynek 14, 50-505 Kraków',\n  descrption: 'This is a third meetup'\n}];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"React Meetups\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"Search for react meetups\"\n      })]\n    }), /*#__PURE__*/_jsx(MeetupList, {\n      meetups: props.meetups\n    })]\n  });\n}; // export async function getServerSideProps(context) {\n// \tconst res = context.res;\n// \tconst req = context.req;\n// \t// fetch data\n// \treturn {\n// \t\tprops: {\n// \t\t\tmeetups: DUMMY_MEETUPS,\n// \t\t},\n// \t};\n// }\n\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect('mongodb+srv://artursem:to0A1je75MsJ9SZu@cluster0.qa4m5.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 10\n  };\n}\nexport default HomePage;","map":null,"metadata":{},"sourceType":"module"}